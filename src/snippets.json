{
	"bm hot reload": {
		"prefix": "bm-hot",
		"body": [
			"    module.hot.accept('./moves.ts', () => {",
			"      console.log('moves reload!');",
			"      const { dance } = require('./moves.ts') as any;",
			"      this.danceFn = dance;",
			"    });"
		]
	},
	"bm dance": {
		"prefix": "bm-dance",
		"body": [
			"export function dance(beat: number) {",
			"  switch (beat) {",
			"    case 1: return [90 - 20, 90, 90, 90 - 20];",
			"    case 2: return [90 - 20, 90, 90 - 20, 90 - 20];",
			"    case 3:",
			"    case 4: return [90, 90, 90, 90];",
			"    case 5: return [90 + 20, 90 - 15, 90, 90 + 20];",
			"    case 6: return [90 + 20, 90, 90, 90 + 20];",
			"    case 7:",
			"    case 8: return [90, 90, 90, 90];",
			"  }",
			"}"
		]
	},
	"bm beat": {
		"prefix": "bm-beat",
		"body": [
			"    this.engine.beat",
			"      .map(beat => Math.floor((beat + 0.25) % 8) + 1)",
			"      .distinctUntilChanged()",
			"      .subscribe(beat => {",
			"        console.log(beat);",
			"      });"
		]
	},
	"bm bulb": {
		"prefix": "bm-bulb",
		"body": [
			"export function animateBulb(beat: number) {",
			"  return beat % 2 ? { r: 255, g: 0, b: 0 } : { r: 0, g: 255, b: 0 };",
			"}"
		]
	}
}
